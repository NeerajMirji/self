import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/events")
public class EventController {

    @GetMapping("/test")
    public ResponseEntity<Map<String, Object>> getTestEventResponse() {
        // Create the JSON structure
        Map<String, Object> response = new HashMap<>();
        
        Map<String, Object> producers = new HashMap<>();
        
        // Create ODS producer details
        Map<String, Object> odsDetails = new HashMap<>();
        odsDetails.put("producedCount", 100);
        
        Map<String, Object> odsConsumedBy = new HashMap<>();
        
        // IRWS consumer details
        Map<String, Object> irwsDetails = new HashMap<>();
        irwsDetails.put("consumedCount", 95);
        irwsDetails.put("discrepancies", List.of("event1", "event2"));
        odsConsumedBy.put("IRWS", irwsDetails);
        
        // AnotherConsumer details
        Map<String, Object> anotherConsumerDetails = new HashMap<>();
        anotherConsumerDetails.put("consumedCount", 98);
        anotherConsumerDetails.put("discrepancies", List.of());
        odsConsumedBy.put("AnotherConsumer", anotherConsumerDetails);
        
        odsDetails.put("consumedBy", odsConsumedBy);
        producers.put("ODS", odsDetails);
        
        // AnotherProducer details
        Map<String, Object> anotherProducerDetails = new HashMap<>();
        anotherProducerDetails.put("producedCount", 80);
        
        Map<String, Object> anotherProducerConsumedBy = new HashMap<>();
        
        // SomeConsumer details
        Map<String, Object> someConsumerDetails = new HashMap<>();
        someConsumerDetails.put("consumedCount", 75);
        someConsumerDetails.put("discrepancies", List.of("event3"));
        anotherProducerConsumedBy.put("SomeConsumer", someConsumerDetails);
        
        // AnotherConsumer details for AnotherProducer
        anotherConsumerDetails = new HashMap<>();
        anotherConsumerDetails.put("consumedCount", 77);
        anotherConsumerDetails.put("discrepancies", List.of());
        anotherProducerConsumedBy.put("AnotherConsumer", anotherConsumerDetails);
        
        anotherProducerDetails.put("consumedBy", anotherProducerConsumedBy);
        producers.put("AnotherProducer", anotherProducerDetails);
        
        response.put("producers", producers);
        
        return ResponseEntity.ok(response);
    }
}
