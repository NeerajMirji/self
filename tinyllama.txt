import streamlit as st
import requests
from datetime import datetime

# Helper function to get event counts
def get_event_count(start, end):
    url = "http://localhost:5000/events/date-range"
    payload = {
        "start_date": start.isoformat(),
        "end_date": end.isoformat()
    }
    response = requests.post(url, json=payload)
    return response.json()

# Helper function to get unconsumed events (assuming this API exists)
def get_unconsumed_events(start, end, producer, consumer):
    url = "http://localhost:5000/events/unconsumed"
    payload = {
        "start_date": start.isoformat(),
        "end_date": end.isoformat(),
        "producer": producer,
        "consumer": consumer
    }
    response = requests.post(url, json=payload)
    return response.json()

# Set up the Streamlit sidebar
st.sidebar.title("Event Status Visualization")

# Feature 1: Search by Date and Time
st.header("Search by Date and Time")
start_date = st.date_input("Start date")
start_time = st.time_input("Start time")
end_date = st.date_input("End date")
end_time = st.time_input("End time")

if st.button("Get Event Counts"):
    start = datetime.combine(start_date, start_time)
    end = datetime.combine(end_date, end_time)
    event_counts = get_event_count(start, end)

    st.write("## Event Counts")
    for producer, counts in event_counts['producers'].items():
        st.write(f"### Produced by {producer}: {counts['producedCount']}")
        for consumer, details in counts['consumedBy'].items():
            st.write(f"Consumed by {consumer}: {details['consumedCount']}")
            if details['discrepancies']:
                st.warning(f"Mismatch detected for consumer {consumer}! Click the link below to view unconsumed events.")
                if st.button(f"View unconsumed events for {consumer}"):
                    unconsumed_events = get_unconsumed_events(start, end, producer, consumer)
                    st.write(f"Unconsumed Events for {consumer}:")
                    st.write(unconsumed_events)
            else:
                st.write(f"No discrepancies for consumer {consumer}")

# Note: The get_unconsumed_events function assumes there is an API to fetch the list of unconsumed events for a given producer-consumer pair.
