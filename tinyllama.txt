import streamlit as st
import requests
from datetime import datetime

# Base URL of the Spring Boot backend
BASE_URL = "http://localhost:8080/events"

def get_event_count(start, end):
    response = requests.get(f"{BASE_URL}/count", params={"start": start, "end": end})
    return response.json()

def get_unconsumed_events(start, end):
    response = requests.get(f"{BASE_URL}/unconsumed", params={"start": start, "end": end})
    return response.json()

def get_event_status(event_id):
    response = requests.get(f"{BASE_URL}/status/{event_id}")
    return response.json()

st.title("Event Monitoring Dashboard")

# Feature 1: Search by Date and Time
st.header("Search by Date and Time")
start_date = st.date_input("Start date")
start_time = st.time_input("Start time")
end_date = st.date_input("End date")
end_time = st.time_input("End time")

if st.button("Get Event Counts"):
    start = datetime.combine(start_date, start_time)
    end = datetime.combine(end_date, end_time)
    event_counts = get_event_count(start, end)
    st.write(f"Produced by ODS: {event_counts['producedCount']}")
    st.write(f"Consumed by IRWS: {event_counts['consumedCount']}")
    
    if event_counts['producedCount'] != event_counts['consumedCount']:
        st.warning("Mismatch detected! See unconsumed events below.")
        unconsumed_events = get_unconsumed_events(start, end)
        st.write("Unconsumed Events:")
        st.write(unconsumed_events)

# Feature 2: Search by Event ID
st.header("Search by Event ID")
event_id = st.text_input("Event ID")
if st.button("Get Event Status"):
    event_status = get_event_status(event_id)
    st.write(event_status)
