# actions.py

from typing import Any, Text, Dict, List
from rasa_sdk import Action, Tracker
from rasa_sdk.executor import CollectingDispatcher
import requests

class ActionFetchReport(Action):
    def name(self) -> Text:
        return "action_fetch_report"

    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker, domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:

        # Example: Get CompanyId from slot
        company_id = tracker.get_slot("CompanyId")

        # Make API call to fetch report
        api_url = f"https://api.example.com/reports/{company_id}"
        headers = {"Authorization": "Bearer YOUR_API_TOKEN"}  # Replace with your API token

        try:
            response = requests.get(api_url, headers=headers)
            if response.status_code == 200:
                report_data = response.json()

                # Example: Send report data as a message
                dispatcher.utter_message(text=f"Here is the report for Company ID {company_id}:")
                for item in report_data:
                    dispatcher.utter_message(text=f"{item['date']} - {item['amount']}")
            else:
                dispatcher.utter_message(text="Failed to fetch report. Please try again later.")

        except requests.exceptions.RequestException as e:
            dispatcher.utter_message(text=f"Failed to fetch report: {str(e)}")

        return []
